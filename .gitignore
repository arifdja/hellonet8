## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 cache/options directory
.vs/

# Rider cache/options directory
.idea/

# Microsoft Visual Studio Code settings directory
.vscode/

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NUnit
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
[Uu]nicode [Dd]ebug/
[Uu]nicode [Rr]elease/

# Installshield output folder
[Ee]xpress/

# DocProject documentation generated files
DocProject/build/
DocProject/Help/

# ClickOnce
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: If you have sensitive data in these files, consider adding this entry to your global gitignore.
# https://help.github.com/articles/ignoring-files/#create-a-global-gitignore
*.pubxml
*.publishproj

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json present in projects which use packages.config
project.lock.json
project.fragment.lock.json
# As of NuGet 4.0, a new folder called .nuget is created in the user's profile.
# https://docs.microsoft.com/en-us/nuget/consume-packages/managing-the-global-packages-and-cache-folders
# Both the folders and packages downloaded to them can be ignored.
.nuget/

# Microsoft Azure Service Fabric specific files
.vsfastpublish/

# Windows Installer XML (WiX) toolset temporary files
*.wixpdb

# Visual Studio Interop files
*_i.c
*_p.c
*_i.h

# VSIX files
*.vsix

# Visual Studio Test files
*.vsmdi
*.testsettings

# ReSharper settings
*.DotSettings
*.DotSettings.user

# TeamCity
_TeamCity*

# DotCover
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# StyleCop
StyleCop.Cache

# Fakes
FakesAssemblies/

# GhostDoc
*.ghostdoc

# Node.js Tools for Visual Studio
.ntvs_analysis.dat

# Visual Studio profiler
*.psess
*.vsp
*.vspx

# BenchmarkDotNet
BenchmarkDotNet.Artifacts/

# Tye
.tye/

# Service Fabric
**/ApplicationParameters/
**/PublishProfiles/

# F#
.fable/

# Paket dependency manager
.paket/paket.exe
paket-files/

#FAKE build script
.fake/

# Visual Studio code analysis
*.CodeAnalysisLog.xml

# Incremental Build
.incb

# Client-side Build Values
# This is used by the ASP.NET Core CLI to store values when running client-side builds
# For more information, see https://github.com/aspnet/JavaScriptServices/issues/1224
/obj/Debug/netcoreapp*/tmp/

# Compiled Dynamic Scss files
_*
